(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{587:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、爬虫基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、爬虫基础"}},[t._v("#")]),t._v(" 一、爬虫基础")]),t._v(" "),s("ul",[s("li",[t._v("概念\n"),s("ul",[s("li",[t._v("模拟浏览器，发送请求，获取响应")])])]),t._v(" "),s("li",[t._v("作用\n"),s("ul",[s("li",[t._v("数据采集")]),t._v(" "),s("li",[t._v("软件测试")]),t._v(" "),s("li",[t._v("抢票")]),t._v(" "),s("li",[t._v("网站上的投票")]),t._v(" "),s("li",[t._v("网络安全")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("虫师 博客："),s("a",{attrs:{href:"https://www.cnblogs.com/fnng/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/fnng/"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"_1、http-与-https-的概念和区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、http-与-https-的概念和区别"}},[t._v("#")]),t._v(" 1、http 与 https 的概念和区别")]),t._v(" "),s("ul",[s("li",[t._v("HTTP：超文本传输协议，默认端口号是 80。\n"),s("ul",[s("li",[t._v("超文本：指超过文本，不仅限于文本；还包括图片、音频、视频等文件。")]),t._v(" "),s("li",[t._v("传输协议：是指使用共同约定的固定格式来传递转换成字符串的超文本内容。")])])]),t._v(" "),s("li",[t._v("HTTPS：HTTP + SSL（安全套接字层），即带有安全套接字层的超文本传输协议，默认端口号：443。\n"),s("ul",[s("li",[t._v("SSL：对传输的内容（超文本，也就是请求体或响应体）进行加密。")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("结论：HTTPS 比 HTTP 更安全，但是性能要低一点。")])]),t._v(" "),s("h3",{attrs:{id:"_2、常见请求头与响应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、常见请求头与响应头"}},[t._v("#")]),t._v(" 2、常见请求头与响应头")]),t._v(" "),s("h4",{attrs:{id:"_1-请求头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求头"}},[t._v("#")]),t._v(" 1）请求头")]),t._v(" "),s("ul",[s("li",[t._v("Content-Type：内容类型（用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件）")]),t._v(" "),s("li",[t._v("Host：主机和端口号")]),t._v(" "),s("li",[t._v("Connection：链接类型")]),t._v(" "),s("li",[t._v("Upgrade-Insecure-Requests：升级为 HTTPS 请求")]),t._v(" "),s("li",[s("strong",[t._v("User-Agent")]),t._v("：用户代理，提供系统信息和浏览器信息")]),t._v(" "),s("li",[s("strong",[t._v("Referer")]),t._v("：页面跳转处，常用于防盗链（图片/视频）")]),t._v(" "),s("li",[s("strong",[t._v("Cookie")]),t._v("：状态保持（有时效性）")]),t._v(" "),s("li",[t._v("Authroization：用于表示 HTTP 协议中需要认证资源的认证信息，比如 jwt 认证")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：加粗的请求头为常用请求头，在服务器被用来进行爬虫识别的频率最高，相较于其余的请求头更为重要。")])]),t._v(" "),s("h4",{attrs:{id:"_2-响应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-响应头"}},[t._v("#")]),t._v(" 2）响应头")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Set-Cookie")]),t._v("：服务器设置 cookie 到用户浏览器的缓存")])]),t._v(" "),s("h3",{attrs:{id:"_3、常见的响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、常见的响应状态码"}},[t._v("#")]),t._v(" 3、常见的响应状态码")]),t._v(" "),s("ul",[s("li",[t._v("200：成功")]),t._v(" "),s("li",[t._v("302：跳转，新的 url 在响应的 Location 头中给出")]),t._v(" "),s("li",[t._v("303：浏览器对于 POST 的响应进行重定向至新的 url")]),t._v(" "),s("li",[t._v("307：浏览器对于 GET 的响应重定向至新的 url")]),t._v(" "),s("li",[t._v("403：资源不可用；服务器理解客户的请求，但拒绝处理它（没有权限）")]),t._v(" "),s("li",[t._v("404：找不到该页面")]),t._v(" "),s("li",[t._v("500：服务器内部错误")]),t._v(" "),s("li",[t._v("503：服务器由于维护或者负载过重未能应答，在响应中可能会携带 Retry-After 响应头；有可能是因为爬虫频繁访问 url，使服务器忽视爬虫的请求，最终返回 503 响应状态码")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：所有的状态码都不可信，一切以是否从抓包得到的响应中获取到数据为准。")])]),t._v(" "),s("h3",{attrs:{id:"_4、代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、代理"}},[t._v("#")]),t._v(" 4、代理")]),t._v(" "),s("h4",{attrs:{id:"_1-匿名度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-匿名度"}},[t._v("#")]),t._v(" 1）匿名度")]),t._v(" "),s("p",[t._v("根据代理 ip 的匿名程序，代理 IP 可以分为下面三类：")]),t._v(" "),s("ul",[s("li",[t._v("透明代理：透明代理虽然可以直接“隐藏”你的 IP 地址，但还是可以查到你是谁。目标服务器接收到的请求头如下：")])]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v("REMOTE_ADDR = Proxy IP\nHTTP_VIA = Proxy IP\nHTTP_X_FORWARDED_FOR = Your IP\n")])])]),s("ul",[s("li",[t._v("匿名代理：使用匿名代理，别人只能知道你用了代理，无法知道你是谁。目标服务器接收到的请求头如下：")])]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v("REMOTE_ADDR = Proxy IP\nHTTP_VIA = Proxy IP\nHTTP_X_FORWARDED_FOR = Proxy IP\n")])])]),s("ul",[s("li",[t._v("高匿代理：高匿代理让别人根本无法发现你在使用代理，所以高匿代理是最好的选择。"),s("code",[t._v("毫无疑问使用高匿代理效果最好")]),t._v("。目标服务器接收到的请求头如下：")])]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v("REMOTE_ADDR = Proxy IP\nHTTP_VIA = not determined\nHTTP_X_FORWARDED_FOR = not determined\n")])])]),s("h4",{attrs:{id:"_2-协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-协议"}},[t._v("#")]),t._v(" 2）协议")]),t._v(" "),s("p",[t._v("根据网站所使用的协议不同，需要使用相应协议的代理服务。从代理服务请求使用的协议可以分为：")]),t._v(" "),s("ul",[s("li",[t._v("http 代理：目标 url 为 http 协议")]),t._v(" "),s("li",[t._v("https 代理：目标 url 为 https 协议")]),t._v(" "),s("li",[t._v("socks 隧道代理（例如 socks5 代理）等：\n"),s("ul",[s("li",[t._v("socks 代理只是简单地传递数据包，不关心是何种应用协议（FTP、HTTP 和 HTTPS 等）")]),t._v(" "),s("li",[t._v("socks 代理比 http、https 代理耗时少")]),t._v(" "),s("li",[t._v("socks 代理可以转发 http 和 https 的请求")])])])]),t._v(" "),s("h2",{attrs:{id:"二、requests-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、requests-模块"}},[t._v("#")]),t._v(" 二、requests 模块")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("作用：发送 http 请求，获取响应数据。")])]),t._v(" "),s("li",[s("p",[t._v("官方文档")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.python-requests.org/zh_CN/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.python-requests.org/zh_CN/latest/"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("快速上手："),s("a",{attrs:{href:"https://docs.python-requests.org/zh_CN/latest/user/quickstart.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.python-requests.org/zh_CN/latest/user/quickstart.html"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("高级用法："),s("a",{attrs:{href:"https://docs.python-requests.org/zh_CN/latest/user/advanced.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.python-requests.org/zh_CN/latest/user/advanced.html"),s("OutboundLink")],1)])])]),t._v(" "),s("li",[s("p",[t._v("优点（相比于 urllib 模块）：")]),t._v(" "),s("ul",[s("li",[t._v("requests 模块代码简洁易懂。")]),t._v(" "),s("li",[t._v("使用 requests 编写的爬虫代码将会更少。")]),t._v(" "),s("li",[t._v("功能实现上也简单很多。")])])])]),t._v(" "),s("h3",{attrs:{id:"_1、requests-安装及简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、requests-安装及简单使用"}},[t._v("#")]),t._v(" 1、requests 安装及简单使用")]),t._v(" "),s("h4",{attrs:{id:"_1-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装"}},[t._v("#")]),t._v(" 1）安装")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("pip"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pip3 install requests\n")])])]),s("h4",{attrs:{id:"_2-发送-get-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-发送-get-请求"}},[t._v("#")]),t._v(" 2）发送 get 请求")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向目标url发送get请求")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(response.encoding)  # ISO-8859-1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印响应内容（中文可能会乱码）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意："),s("code",[t._v("response.text")]),t._v(" 是 "),s("code",[t._v("requests")]),t._v(" 模块按照 "),s("code",[t._v("chardet")]),t._v(" 模块推测出的编码字符集进行解码的结果。")])]),t._v(" "),s("h4",{attrs:{id:"_3-字符编码-解决中文乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符编码-解决中文乱码"}},[t._v("#")]),t._v(" 3）字符编码（解决中文乱码）")]),t._v(" "),s("p",[s("code",[t._v("response.text")]),t._v(" 和 "),s("code",[t._v("response.content")]),t._v(" 的区别：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("response.text")]),t._v(" "),s("ul",[s("li",[t._v("类型：str")]),t._v(" "),s("li",[t._v("解码类型：requests 模块自动根据 HTTP 头部，对响应的编码作出有根据的推测，推测出文本的编码。")])])]),t._v(" "),s("li",[s("code",[t._v("response.content")])]),t._v(" "),s("li",[t._v("类型：bytes")]),t._v(" "),s("li",[t._v("解码类型：没有指定")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ####### 指定 response.text 编码 #######")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 手动指定编码格式")]),t._v("\nresponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encoding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ####### 指定 response.content 编码 #######")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# response.content 是存储的bytes类型的响应源码，可以进行decode操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(response.content.decode('gbk'))")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认utf-8")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2、response-响应对象常用属性或方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、response-响应对象常用属性或方法"}},[t._v("#")]),t._v(" 2、Response 响应对象常用属性或方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("response.url")]),t._v(" ：响应的 url；有时候响应的 url 和请求的 url 并不一致")]),t._v(" "),s("li",[s("code",[t._v("response.status_code")]),t._v(" ：响应状态码")]),t._v(" "),s("li",[s("code",[t._v("response.request.headers")]),t._v(" ：响应对应的请求头")]),t._v(" "),s("li",[s("code",[t._v("response.headers")]),t._v(" ：响应头")]),t._v(" "),s("li",[s("code",[t._v("response.request._cookies")]),t._v(" ：响应对应请求的 cookie；返回 cookieJar 类型")]),t._v(" "),s("li",[s("code",[t._v("response.cookies")]),t._v(" ：响应的 cookie（经过了 set-cookie 动作；返回 cookieJar 类型）")]),t._v(" "),s("li",[s("code",[t._v("response.json()")]),t._v(" ：自动将 json 字符串类型的响应内容转换为 python 对象（dict or list）")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向目标url发送get请求")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打印响应内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(response.text)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(response.content.decode())")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应的url")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status_code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应的状态码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应对象的请求头")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应头")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请求携带的cookies")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 响应中携带的cookies")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3、requests-模块发送请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、requests-模块发送请求"}},[t._v("#")]),t._v(" 3、requests 模块发送请求")]),t._v(" "),s("h4",{attrs:{id:"_1-发送带请求头的请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-发送带请求头的请求"}},[t._v("#")]),t._v(" 1）发送带请求头的请求")]),t._v(" "),s("p",[s("code",[t._v("requests.get(url, headers=headers)")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("headers 参数接收字典形式的请求头")]),t._v(" "),s("li",[t._v("请求头字段名为 key，字段对应的值为 value")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建请求头字典")]),t._v("\nheaders "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-Agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 发送带请求头的请求")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2-发送带参数的请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-发送带参数的请求"}},[t._v("#")]),t._v(" 2）发送带参数的请求")]),t._v(" "),s("ul",[s("li",[t._v("方式一：在 url 中携带参数，即直接对含有参数的 url 发起请求")]),t._v(" "),s("li",[t._v("方式二：通过 params 携带参数，即构建请求参数字典 "),s("code",[t._v("data")]),t._v(" 并设置给 params\n"),s("ul",[s("li",[s("code",[t._v("requests.get(url, params=data)")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nheaders "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-Agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式一：在url中携带参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url = 'http://www.baidu.com/s?wd=python'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# response = requests.get(url, headers=headers)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式二：通过params携带参数")]),t._v("\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com/s'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建参数字典")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'python'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-发送带-cookie-的请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-发送带-cookie-的请求"}},[t._v("#")]),t._v(" 3）发送带 cookie 的请求")]),t._v(" "),s("ul",[s("li",[t._v("方式一：在 headers 参数中携带 cookie")]),t._v(" "),s("li",[t._v("方式二：使用 "),s("code",[t._v("cookies")]),t._v(" 参数\n"),s("ul",[s("li",[s("code",[t._v("response = requests.get(url, cookies)")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com/GitLqr'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式一：在headers参数中携带cookie")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建请求头")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# headers = {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     ...,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     'Cookie': '_octo=GH1.1.1045146750.1615451260; balabala...',")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# response = requests.get(url, headers=headers)")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 方式二：使用 cookies 参数(字典)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：需要字符串 --\x3e 字典")]),t._v("\ntemp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_octo=GH1.1.1045146750.1615451260; _device_id=cd8d64981fcb3fd4ba7f587873e97804;balabala...'")]),t._v("\ncookie_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 稳妥方案")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cookies = {}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for cookie in cookie_list:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     cookies[cookie.split('=')[0]] = cookie.split('=')[-1]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推导式方案")]),t._v("\ncookies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" cookie "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" cookie_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cookies"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-cookiejar-对象与字典互转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookiejar-对象与字典互转"}},[t._v("#")]),t._v(" 4）cookieJar 对象与字典互转")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cookieJar对象 转换为 cookies字典")]),t._v("\ndict_cookies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dict_from_cookiejar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cookies字典 转换为 cookieJar对象")]),t._v("\njar_cookies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookiejar_from_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict_cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_5-设置请求超时参数-timeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-设置请求超时参数-timeout"}},[t._v("#")]),t._v(" 5）设置请求超时参数 timeout")]),t._v(" "),s("p",[s("code",[t._v("requests.get(url, timeout=3)")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("timeout=3")]),t._v(" 表示：发送请求后，3 秒内返回响应，否则就抛出异常")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://twitter.com'")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_6-proxies-代理参数的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-proxies-代理参数的使用"}},[t._v("#")]),t._v(" 6）proxies 代理参数的使用")]),t._v(" "),s("p",[s("code",[t._v("response = requests.get(url, proxies=proxies)")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("proxies 类型：字典")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v("\n\nproxies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://61.160.210.234:808'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://61.160.210.234:808'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proxies"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("proxies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：代理使用成功不会有任何报错，能成功获取响应；如果失败，要么卡滞，要么报错。")])]),t._v(" "),s("ul",[s("li",[t._v("免费代理 ip 提供站：\n"),s("ul",[s("li",[s("a",{attrs:{href:"http://www.66ip.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.66ip.cn/"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.kuaidaili.com/free/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.kuaidaili.com/free/"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.data5u.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.data5u.com/"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://proxy.mimvp.com/freeopen",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://proxy.mimvp.com/freeopen"),s("OutboundLink")],1)])])])]),t._v(" "),s("h4",{attrs:{id:"_7-使用-verify-参数忽略-ca-证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用-verify-参数忽略-ca-证书"}},[t._v("#")]),t._v(" 7）使用 verify 参数忽略 CA 证书")]),t._v(" "),s("p",[t._v("当某些网站的 CA 证书没有经过【受信任的根证书颁发机构】的认证，访问时会被拦截，浏览器会显示【您的连接不是私密连接】等提示，这时有 2 种解决方案：")]),t._v(" "),s("ul",[s("li",[t._v("方式一：下载该网站的 CA 证书，手动导入给当前设备")]),t._v(" "),s("li",[t._v("方式二：使用 "),s("code",[t._v("response = requests.get(url, verify=False)")]),t._v(" 直接忽略 CA 证书验证\n"),s("ul",[s("li",[s("strong",[t._v("verify 参数能够忽略 CA 证书的认证")])])])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://sam.huat.edu.cn:8443/selfservice/'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错：requests.exceptions.SSLError: HTTPSConnectionPool(host='sam.huat.edu.cn', port=8443): Max retries exceeded with url: /selfservice/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate (_ssl.c:1125)')))")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# response = requests.get(url)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 警告：InsecureRequestWarning: Unverified HTTPS request is being made to host '127.0.0.1'. Adding certificate verification is strongly advised.")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" verify"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_8-发送-post-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-发送-post-请求"}},[t._v("#")]),t._v(" 8）发送 post 请求")]),t._v(" "),s("p",[s("code",[t._v("response = requests.post(url, data)")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("data")]),t._v(" 参数接收一个字典")]),t._v(" "),s("li",[t._v("request 模块发送 post 请求函数的其它参数和发送 get 请求的参数完全一致")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("King")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://ifanyi.iciba.com/index.php?c=trans&m=fy&client=6&auth_user=key_ciba&sign=37218aa29f55fdcc'")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-Agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'from'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'to'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'q'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" word\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用post方法发送一个post请求，data为请求体的字典")]),t._v("\n        response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# loads方法将json字符串转换成python字典")]),t._v("\n        dict_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dict_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'out'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# word = input('请输入要翻译的单词或句子:')")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# word = sys.argv[1]")]),t._v("\n    word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'字典'")]),t._v("\n    king "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" King"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    king"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_9-利用-requests-session-进行状态保持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-利用-requests-session-进行状态保持"}},[t._v("#")]),t._v(" 9）利用 requests.session 进行状态保持")]),t._v(" "),s("p",[t._v("requests 模块中的 Session 类能够自动处理发送请求获取响应过程中产生的 cookie，进而达到状态保持的目的。")]),t._v(" "),s("ul",[s("li",[t._v("作用：自动处理 cookie")]),t._v(" "),s("li",[t._v("场景：连续的多次请求")]),t._v(" "),s("li",[t._v("使用方法：")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("session "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实例化session对象")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：session 对象发送 get 或 post 请求的参数，与 requests 模块发送请求的参数完全一致")])])])}),[],!1,null,null,null);s.default=e.exports}}]);