(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{489:function(t,a,s){"use strict";s.r(a);var n=s(21),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("在tableView中，我们一般会用到scrollToRow这个来控制tableView滚到指定的某一行。一般写法如下所示")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MARK: 滚到底部")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("scrollToBottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dataArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        tableView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scrollToRow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dataArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" section"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" animated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#情况"}},[t._v("#")]),t._v(" 情况")]),t._v(" "),a("p",[t._v("今天鄙人使用SnapKit来布局cell，然后用scrollToRow来滚到底部就遇到了一个很奇葩的现象。\n我设置了在键盘弹出后聊天消息列表会自动滚到底部。\n1.随便输入一条消息，点发送后，在聊天消息列表中并没有滚到最新消息那一行。\n2.退出键盘不做任何操作再打开键盘也是滚到刚才那里(即最新消息的上一条所在位置)\n3.只有在退出键盘后把聊天消息列表的消息向上拉一点距离露出最新消息所在的cell之后，再点击才有用")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210110201725.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),a("p",[t._v("在无奈之下，经过了一步步的探索，终于发现了问题的所在\n首先我们要了解一下scrollToRow执行后会调用哪些函数及顺序\n"),a("strong",[t._v("会调用这两个方法")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt indexPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v("\n")])])]),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("tableView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" tableView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heightForRowAt indexPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CGFloat")]),t._v("\n")])])]),a("h3",{attrs:{id:"步骤一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤一"}},[t._v("#")]),t._v(" 步骤一")]),t._v(" "),a("p",[t._v("我在 heightForRow 中写了具体的数据，也就是把高度写死，不再是动态获取。接着执行程序得到如下结果\n比如我原本有10条数据，现在加入了一条后执行了scrollToRow，它会\n1.先调用 heightForRow 11次，"),a("strong",[t._v("即包括最新加入的那一条")]),t._v("\n2.然后再调用 cellForRow\n3.最后在调一次 heightForRow\n后面的2和3是针对最新消息的")]),t._v(" "),a("h3",{attrs:{id:"步骤二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤二"}},[t._v("#")]),t._v(" 步骤二")]),t._v(" "),a("p",[t._v("我在 heightForRow 中不再写死高度，\b而是从模型数据中动态获取高度(高度是在cell布局后获取的，再赋值到模型数据中的cellHeight变量)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("执行程序得到\b这个结果：调用 heightForRow 11次，然后就没了\n")])])]),a("p",[t._v("好吧，问题就出现在对heightForRow的第11次调用，前10次都有返回具体的高度，而最后一次是0~。")]),t._v(" "),a("h3",{attrs:{id:"结论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("p",[a("strong",[t._v("\b现在清楚了，要想在调用 scrollToRow 到指定的那一行，前提条件是那一行的高度不能为0。")]),t._v("\n所以在上面的情况中，发送完消息后，最新消息的cell的确是插入到了tableView，也有显示出来(后面我自己测的)，但就是无法滚到最新消息那一行，就是因为 heightForRow 返回的高度为0\n在上面的情况中，向上拉一点距离露出cell后scrollToRow才有效就是因为此时heightForRow返回的高度不再为0")]),t._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("按本人自身的情况来说，有两种解决方法")]),t._v(" "),a("h3",{attrs:{id:"第一种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一种"}},[t._v("#")]),t._v(" 第一种")]),t._v(" "),a("p",[t._v("在传入的模型数据中给予明确计算出来的数值就好。")]),t._v(" "),a("h3",{attrs:{id:"第二种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二种"}},[t._v("#")]),t._v(" 第二种")]),t._v(" "),a("p",[t._v("我使用SnapKit来自动布局cell的\b位置然后再来获取高度，这做法主要就是为了避免运算。所以我不选用第一种解决方法\n好了，方法如下：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dataArr是用来存放模型的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" indexPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dataArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" section"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用tableView的数据源办法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tableView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tableView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cellForRowAt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" indexPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在插入\b最新消息后，调用tableView的数据源\b方法来让它先对cell进行布局，这样就获取到了cell的高度，然后再执行 scrollToRow 就好了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210110201758.gif",alt:"\b完美"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);