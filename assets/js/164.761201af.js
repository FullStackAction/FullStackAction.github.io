(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{574:function(t,a,s){"use strict";s.r(a);var n=s(21),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("为了让 vite 项目支持多渠道差异化打包（如同 Android 工程变体），我做了一个 vite 插件：")]),t._v(" "),a("ul",[a("li",[t._v("GitHub: "),a("a",{attrs:{href:"https://github.com/GitLqr/vite-plugin-variant",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/GitLqr/vite-plugin-variant"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("npm："),a("a",{attrs:{href:"https://www.npmjs.com/package/vite-plugin-variant",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.npmjs.com/package/vite-plugin-variant"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"一、简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[t._v("#")]),t._v(" 一、简介")]),t._v(" "),a("p",[a("code",[t._v("vite-plugin-variant")]),t._v(" 是一个管理多渠道差异化源码的 "),a("code",[t._v("vite")]),t._v(" 插件，与其他 "),a("code",[t._v("vite")]),t._v(" 插件不同，"),a("code",[t._v("vite-plugin-variant")]),t._v(" 的原理是从多渠道源码目录中过滤出当前渠道的所有源码文件，然后对 "),a("code",[t._v("src")]),t._v(" 目录进行更新，即从多渠道源码(MCS)到当前渠道源码(FCS)的过程，而不再是基于 "),a("code",[t._v("src")]),t._v(" 目录做文章，所以与其他 "),a("code",[t._v("vite")]),t._v(" 插件可以很好的兼容。")]),t._v(" "),a("ul",[a("li",[t._v("MCS：多渠道源码（multi-channel src）")]),t._v(" "),a("li",[t._v("FCS：最终渠道源码（final channel src）")])]),t._v(" "),a("h2",{attrs:{id:"二、特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、特性"}},[t._v("#")]),t._v(" 二、特性")]),t._v(" "),a("ul",[a("li",[t._v("支持添加、删除、更新文件即时生效（HMR）")]),t._v(" "),a("li",[t._v("支持动态切换渠道")]),t._v(" "),a("li",[t._v("支持定义多渠道全局变量")]),t._v(" "),a("li",[t._v("支持各种 vite 工程（包括 uniapp）")])]),t._v(" "),a("h2",{attrs:{id:"三、使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、使用"}},[t._v("#")]),t._v(" 三、使用")]),t._v(" "),a("h3",{attrs:{id:"_1、安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装"}},[t._v("#")]),t._v(" 1、安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i vite-plugin-variant "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置"}},[t._v("#")]),t._v(" 2、配置")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("vite.config.ts")]),t._v(" 中添加配置：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" variant "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vite-plugin-variant"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      mcsCurrent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"channelA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前渠道")]),t._v("\n      mcsDefine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        channelA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渠道A 的全局变量 ....")]),t._v("\n        channelB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渠道B 的全局变量 ....")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other plugins")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ol",[a("li",[t._v("需要将 "),a("code",[t._v("variant()")]),t._v(" 放置到插件列表最前，才能与其他插件更好的兼容。")]),t._v(" "),a("li",[t._v("修改 "),a("code",[t._v("mcsCurrent")]),t._v(" 的值即可切换渠道，dev 模式下会自动重新部署。")])])]),t._v(" "),a("h3",{attrs:{id:"_3、源码目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、源码目录"}},[t._v("#")]),t._v(" 3、源码目录")]),t._v(" "),a("ol",[a("li",[t._v("在 "),a("code",[t._v("src")]),t._v(" 同级目录下创建 "),a("code",[t._v("variants/main")]),t._v(" 目录，存放项目的默认工程源码。")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("variants")]),t._v(" 目录下创建渠道目录（如："),a("code",[t._v("channelA")]),t._v("、"),a("code",[t._v("channelB")]),t._v("），作为各渠道差异性源码。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20220417121922/image/202211061334517.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("说明：假设工程需要上线 2 个不同的渠道，分别是华为和小米，它们各自显示的 logo 图片不同，那么可以在各自的渠道目录下放置各自的 logo 图片，如果有一个渠道没有放置 logo 图片，则使用 main 目录下默认的 logo 图片，其他源码文件同理。")])]),t._v(" "),a("h3",{attrs:{id:"_4、全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、全局变量"}},[t._v("#")]),t._v(" 4、全局变量")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("vite.config.ts")]),t._v(" 中配置各渠道的全局变量：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("variant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      mcsCurrent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"huawei"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      mcsDefine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        xiaomi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WEBSITE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.mi.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        huawei"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WEBSITE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www.huawei.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("mcsDefine")]),t._v(" 中定义的全局变量跟在 vite 的 define 选项中定义的效果是一样的，但是 "),a("code",[t._v("mcsDefine")]),t._v(" 能更好的管理各个渠道各自的变量。")]),t._v(" "),a("li",[a("code",[t._v("vite-plugin-variant")]),t._v(" 会自动在 "),a("code",[t._v("variants/main")]),t._v(" 目录下根据当前渠道的全局变量生成 "),a("code",[t._v("variant-env.d.ts")]),t._v("，防止 TypeScript 编译报错。")])])]),t._v(" "),a("p",[t._v("在代码中可以直接使用：")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" flavor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLAVOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" website "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WEBSITE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5、其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、其他"}},[t._v("#")]),t._v(" 5、其他")]),t._v(" "),a("ol",[a("li",[t._v("因为多渠道源码都在 "),a("code",[t._v("variants")]),t._v(" 目录下，而 "),a("code",[t._v("src")]),t._v(" 作为 "),a("code",[t._v("vite-plugin-variant")]),t._v(" 的输出目录，其下文件会随时变化，故建议在 "),a("code",[t._v(".gitignore")]),t._v(" 文件中将 "),a("code",[t._v("src")]),t._v(" 目录忽略。")]),t._v(" "),a("li",[a("code",[t._v("vite-plugin-variant")]),t._v(" 会自动在 "),a("code",[t._v("tsconfig.json")]),t._v(" 的 "),a("code",[t._v("include")]),t._v(" 选项中插入必要的规则，避免 "),a("code",[t._v("variants")]),t._v(" 目录下代码不被 TypeScript 识别从而提示报错。")])]),t._v(" "),a("h2",{attrs:{id:"四、demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、demo"}},[t._v("#")]),t._v(" 四、Demo")]),t._v(" "),a("p",[a("code",[t._v("vite-plugin-variant")]),t._v(" 提供了 2 个简单 Demo 为开发者提供参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/GitLqr/vite-plugin-variant/tree/main/examples/vite-vue3-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/GitLqr/vite-plugin-variant/tree/main/examples/vite-vue3-demo"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/GitLqr/vite-plugin-variant/tree/main/examples/uniapp-vue3-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/GitLqr/vite-plugin-variant/tree/main/examples/uniapp-vue3-demo"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);