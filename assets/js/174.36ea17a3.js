(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{582:function(s,a,t){"use strict";t.r(a);var e=t(21),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("Dockerfile: 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。")]),s._v(" "),a("p",[s._v("应用: 将部署过程中涉及到的所有步骤全部写入到 "),a("code",[s._v("Dockerfile")]),s._v(" 中，到时只需要执行 "),a("code",[s._v("Dockerfile")]),s._v(" 就可以自动完成相应的操作")])]),s._v(" "),a("h2",{attrs:{id:"快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[s._v("#")]),s._v(" 快速入门")]),s._v(" "),a("h3",{attrs:{id:"编辑dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑dockerfile"}},[s._v("#")]),s._v(" 编辑Dockerfile")]),s._v(" "),a("p",[s._v("在当前目录下创建 "),a("code",[s._v("Dockerfile")]),s._v(" 并进行编辑")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" Dockerfile\n")])])]),a("p",[s._v("操作：启动 "),a("code",[s._v("ubuntu")]),s._v(" 镜像，在启动起来后去更新 "),a("code",[s._v("ubuntu")]),s._v(" 容器下的软件资源\n内容如下")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# From: 启动运行一个镜像资源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("From")]),s._v(" ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Run: 在启动起来的容器中执行指令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get update")]),s._v("\n")])])]),a("h3",{attrs:{id:"运行dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行dockerfile"}},[s._v("#")]),s._v(" 运行Dockerfile")]),s._v(" "),a("p",[s._v("构建镜像命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("镜像名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Dockerfile所在目录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("指定在当前目录下去查找 "),a("code",[s._v("Dockerfile")]),s._v(" 文件，并将 "),a("code",[s._v("Dockerfile")]),s._v(" 自动化处理后的（更新了软件资源）容器打成名为 "),a("code",[s._v("lxf")]),s._v(" 的镜像资源")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" lxf "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("执行效果：\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145009.png",alt:""}}),s._v("\n待执行完成后，当前拥有的镜像资源就多出了 "),a("code",[s._v("lxf")]),s._v(" 这一个，可以看到 "),a("code",[s._v("lxf")]),s._v(" 这个镜像的大小是要比 "),a("code",[s._v("ubuntu")]),s._v(" 的镜像要大一点的\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145041.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"基础指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础指令详解"}},[s._v("#")]),s._v(" 基础指令详解")]),s._v(" "),a("h3",{attrs:{id:"from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" FROM")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" <image>:<tag>")]),s._v("\n")])])]),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("FROM")]),s._v(" 是 "),a("code",[s._v("Dockerfile")]),s._v(" 里的第一条而且只能是除了首行注释之外的第一条指令")])]),s._v(" "),a("h3",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" RUN")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" <command>")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("]")]),s._v("\n")])])]),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("表示当前镜像构建时候运行的命令")])]),s._v(" "),a("p",[s._v("注释：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell 模式：类似于 /bin/bash -c command ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo hello ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# exec 模式：类似于 RUN ["/bin/bash", "-c", "command"] ')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("]")]),s._v("\n")])])]),a("p",[s._v("执行多条指令")]),s._v(" "),a("ul",[a("li",[s._v("一条条指令写")])]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo hello")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo world")]),s._v("\n")])])]),a("ul",[a("li",[s._v("将指令用 "),a("code",[s._v("&&")]),s._v(" 连接起来")])]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo hello && echo world")]),s._v("\n")])])]),a("h3",{attrs:{id:"maintainer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maintainer"}},[s._v("#")]),s._v(" MAINTAINER")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" <name>")]),s._v("\n")])])]),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("指定该 "),a("code",[s._v("Dockerfile")]),s._v(" 文件的维护者信息")])]),s._v(" "),a("h3",{attrs:{id:"expose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[s._v("#")]),s._v(" EXPOSE")]),s._v(" "),a("blockquote",[a("p",[s._v("设置容器对外开放的端口")])]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" <port> [<port>...]")]),s._v("\n")])])]),a("p",[s._v("解释：")]),s._v(" "),a("ul",[a("li",[s._v("设置 "),a("code",[s._v("Docker")]),s._v(" 容器对外暴露的端口号， "),a("code",[s._v("Docker")]),s._v(" 为了安全，不会自动对外打开端口，如果需要外部提供访问，还需要启动容器时增加 "),a("code",[s._v("-p")]),s._v(" 或者 "),a("code",[s._v("-P")]),s._v(" 参数对容器的端口进行分配。")])]),s._v(" "),a("h3",{attrs:{id:"entrypoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint"}},[s._v("#")]),s._v(" ENTRYPOINT")]),s._v(" "),a("blockquote",[a("p",[s._v("设置容器在启动后去执行一个命令")])]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec 模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"executable"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" command param1 param2")]),s._v("\n")])])]),a("p",[s._v("解释：")]),s._v(" "),a("ul",[a("li",[s._v("每个 "),a("code",[s._v("Dockerfile")]),s._v(" 中只能有一个 "),a("code",[s._v("ENTRYPOINT")]),s._v(" ，当指定多个时，只有最后一个起效。")])]),s._v(" "),a("p",[a("code",[s._v("EXPOSE")]),s._v(" 和 "),a("code",[s._v("ENTRYPOINT")]),s._v(" 结合使用的例子，可以全文看完后再回到这里看该例子")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用django镜像资源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("From")]),s._v(" django")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /home")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个名为lxf的django项目")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" django-admin startproject lxf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /home/lxf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对外开放8000端口")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器启动后，将django服务开启，并指定端口号为8000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" python3 manage.py runserver 0.0.0.0:8000")]),s._v("\n")])])]),a("p",[s._v("执行构建镜像命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" lxf "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145109.png",alt:""}}),s._v("\n现在我们将构建好的 "),a("code",[s._v("lxf")]),s._v(" 容器运行起来，并随机分配端口")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-dit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P")]),s._v(" lxf\n")])])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145121.png",alt:""}}),s._v("\n可以看到， "),a("code",[s._v("Docker")]),s._v(" 为我们随机分配了 "),a("code",[s._v("55001")]),s._v(" 端口映射到容器的 "),a("code",[s._v("8000")]),s._v(" 端口，并且可以正常访问到容器的 "),a("code",[s._v("django")]),s._v(" 服务\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145133.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"文件指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件指令详解"}},[s._v("#")]),s._v(" 文件指令详解")]),s._v(" "),a("h3",{attrs:{id:"add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" <src>... <dest>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<src>"')]),s._v(",... "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<dest>"')]),s._v("]")]),s._v("\n")])])]),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("将指定的 "),a("code",[s._v("<src>")]),s._v(" 文件复制到容器文件系统中的 "),a("code",[s._v("<dest>")])]),s._v(" "),a("li",[a("code",[s._v("src")]),s._v(" 指的是宿主机，"),a("code",[s._v("dest")]),s._v("  指的是容器")]),s._v(" "),a("li",[s._v("如果源文件是个压缩文件，则 "),a("code",[s._v("Docker")]),s._v(" 会自动帮解压到指定的容器中(无论目标是文件还是目录，都会当成目录处理)。")])]),s._v(" "),a("p",[s._v("如：将宿主机下的 "),a("code",[s._v("./data")]),s._v(" 目录下的所有文件(夹)，全部复制到容器的 "),a("code",[s._v("/home")]),s._v(" 目录下")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("From")]),s._v(" ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./data /home")]),s._v("\n")])])]),a("p",[s._v("注：目录本身即 "),a("code",[s._v("data")]),s._v(" 目录并不会复制到容器中，只复制 "),a("code",[s._v("data")]),s._v(" 目录下的文件(夹)，如果想连同 "),a("code",[s._v("data")]),s._v(" 文件夹也复制过去，可以修改为如下指令")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("From")]),s._v(" ubuntu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" ./data /home/data")]),s._v("\n")])])]),a("h3",{attrs:{id:"copy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" COPY")]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" <src>... <dest>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<src>"')]),s._v(",... "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<dest>"')]),s._v("]")]),s._v("\n")])])]),a("p",[s._v("解释：")]),s._v(" "),a("ul",[a("li",[s._v("单纯复制文件场景， "),a("code",[s._v("Docker")]),s._v(" 推荐使用 "),a("code",[s._v("COPY")])]),s._v(" "),a("li",[s._v("如果源文件是个压缩文件， "),a("code",[s._v("Docker")]),s._v(" 会直接将压缩文件复制进容器内，不会像 "),a("code",[s._v("ADD")]),s._v(" 那样先解压再复制")])]),s._v(" "),a("p",[s._v("注： "),a("code",[s._v("COPY")]),s._v(" 与 "),a("code",[s._v("ADD")]),s._v(" 基本上是一样的，只是面对源文件是压缩文件时处理方式不同而已， "),a("code",[s._v("ADD")]),s._v(" 会先解压再将解压后的内容复制到容器， "),a("code",[s._v("COPY")]),s._v(" 不会进行解压，而是直接将压缩包复制过去")]),s._v(" "),a("h2",{attrs:{id:"环境指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境指令详解"}},[s._v("#")]),s._v(" 环境指令详解")]),s._v(" "),a("h3",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" ENV")]),s._v(" "),a("blockquote",[a("p",[s._v("设置环境变量")])]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key> <value>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" <key>=<value> ...")]),s._v("\n")])])]),a("p",[s._v("解释：")]),s._v(" "),a("ul",[a("li",[s._v("设置环境变量，可以在 "),a("code",[s._v("RUN")]),s._v(" 之前使用，然后 "),a("code",[s._v("RUN")]),s._v(" 命令时调用，容器启动时这些环境变量都会被指定")])]),s._v(" "),a("p",[s._v("如：设置了环境变量 "),a("code",[s._v("name")]),s._v(" ，并赋值为 "),a("code",[s._v("lxf")]),s._v(" ，使用 "),a("code",[s._v("RUN")]),s._v(" 命令打印 "),a("code",[s._v("name")]),s._v(" 变量的值，可以成功打印出来")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" name=lxf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" # 会打印出lxf")]),s._v("\n")])])]),a("p",[s._v("并且，当进入容器后也可以正常打印出该变量的值")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("root@5721971f92e4:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $name")]),s._v("\nlxf\n")])])]),a("h3",{attrs:{id:"workdir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[s._v("#")]),s._v(" WORKDIR")]),s._v(" "),a("blockquote",[a("p",[s._v("切换目录")])]),s._v(" "),a("p",[s._v("格式：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /path/to/workdir")]),s._v("\n")])])]),a("p",[s._v("解释：")]),s._v(" "),a("ul",[a("li",[s._v("切换目录，为后续的 "),a("code",[s._v("RUN")]),s._v(" 、 "),a("code",[s._v("CMD")]),s._v(" 、 "),a("code",[s._v("ENTRYPOINT")]),s._v(" 指令配置工作目录。")]),s._v(" "),a("li",[s._v("相当于 "),a("code",[s._v("cd")]),s._v(" 命令，可以使用多个 "),a("code",[s._v("WORKDIR")]),s._v(" 指令进行多次切换，后续命令如果参数是相对路径，则会基于之前命令指定的路径")]),s._v(" "),a("li",[s._v("如果我们指定切换到一个不存在的目录， "),a("code",[s._v("Docker")]),s._v(" 会帮我们自动创建相应的目录")])]),s._v(" "),a("p",[s._v("举例：")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" c")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" pwd")]),s._v("\n")])])]),a("p",[s._v("最终路径为 "),a("code",[s._v("/a/b/c")])]),s._v(" "),a("p",[s._v("如果我们想要容器被运行起来时，自动进入到 "),a("code",[s._v("/home")]),s._v(" ，可以按如下指令设置")]),s._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("From")]),s._v(" ubuntu")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /home")]),s._v("\n")])])]),a("p",[s._v("执行 "),a("code",[s._v("Dockerfile")]),s._v(" 构建镜像完成后运行起来，此时容器便会自动进入到 "),a("code",[s._v("/home")]),s._v(" 目录\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145219.png",alt:""}}),s._v("\n对比一下之前没有设置使用过 "),a("code",[s._v("WORKDIR")]),s._v(" ，运行起来的容器，会默认进入到根目录\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource/image/20210131145231.png",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);