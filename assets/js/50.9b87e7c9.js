(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{474:function(s,e,t){"use strict";t.r(e);var a=t(21),r=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一、简述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、简述"}},[s._v("#")]),s._v(" 一、简述")]),s._v(" "),e("p",[s._v("如果你想快速在项目中使用上 openssl，可以使用网上其他开发者提供好的预编译库：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("OpenSSL(All)")]),s._v("："),e("a",{attrs:{href:"https://builds.viaduck.org/prebuilts/openssl/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://builds.viaduck.org/prebuilts/openssl/"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("code",[s._v("OpenSSL(3.1.*)")]),s._v(" ："),e("a",{attrs:{href:"https://github.com/217heidai/openssl_for_android",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/217heidai/openssl_for_android"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("以上的预编译库可能最低只支持 API 21（即 Android 5），如果你的项目需要支持 API 19（Android 4.4.x）及以下的话，就得自己编译 openssl 了，本篇主要记录本人编译 "),e("code",[s._v("openssl 1.1.1")]),s._v(" 过程以及遇到的问题，可能对你有所帮助。")]),s._v(" "),e("h2",{attrs:{id:"二、实战"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、实战"}},[s._v("#")]),s._v(" 二、实战")]),s._v(" "),e("p",[s._v("首先到 openssl 官网或官方仓库中，找到你需要的版本（主要分为 3.x 和 1.x），下载链接如下：")]),s._v(" "),e("ul",[e("li",[s._v("openssl 官网："),e("a",{attrs:{href:"https://www.openssl.org",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.openssl.org"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("GitHub releases："),e("a",{attrs:{href:"https://github.com/openssl/openssl/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/openssl/openssl/releases"),e("OutboundLink")],1)])]),s._v(" "),e("blockquote",[e("p",[s._v("注意：建议不要直接 clone github 仓库（仓库上的最新代码可能存在 bug），要使用官方 release 出来的归档。")])]),s._v(" "),e("p",[s._v("这里我就使用 1.x 中最新的的 1.1.1w 为例，点击 "),e("code",[s._v("openssl-1.1.1w.tar.gz")]),s._v(" 下载后解压。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252221551.jpg",alt:""}})]),s._v(" "),e("p",[s._v("因为 openssl 官方目前没有提供 cmake 编译脚本，还是采用传统的 make 命令编译，所以我们需要编写一个 shell 脚本，命名为 "),e("code",[s._v("build_openssl.sh")]),s._v("，与 "),e("code",[s._v("openssl-1.1.1w")]),s._v(" 文件夹同级。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252228582.jpg",alt:""}})]),s._v(" "),e("p",[e("code",[s._v("build_openssl.sh")]),s._v(" 文件内容如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：执行 pwd 命令获取当前脚本所在目录路径，并赋值给 CRTDIR 变量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CRTDIR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：拼接 openssl 源码目录路径")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SRC_DIR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CRTDIR")]),s._v("/openssl-1.1.1w\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：根据你当前的操作系统，使用对应的 NDK_PLATFORM 变量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NDK_PLATFORM=darwin-x86_64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NDK_PLATFORM=linux-x86_64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NDK_PLATFORM")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("windows-x86_64\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：修改为你的 ndk 目录路径")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ANDROID_NDK_HOME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/c/Users/CharyLin/AppData/Local/Android/Sdk/ndk/21.1.6352462\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：高版本 NDK 不再包含 gcc, 因此需要将 NDK 内置的 clang 加到入 PATH 环境变量中")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ANDROID_NDK_HOME")]),s._v("/toolchains/llvm/prebuilt/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NDK_PLATFORM")]),s._v("/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：编译 arm64 架构需要用到脚本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ANDROID_NDK_HOME")]),s._v("/toolchains/aarch64-linux-android-4.9/prebuilt/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NDK_PLATFORM")]),s._v("/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：编译 arm 架构需要用到脚本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ANDROID_NDK_HOME")]),s._v("/toolchains/arm-linux-androideabi-4.9/prebuilt/"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NDK_PLATFORM")]),s._v("/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SRC_DIR")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("build_onearch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('">> configure '),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ARCH")]),s._v('"')]),s._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：指定最低支持的 api 和 cpu 架构")]),s._v("\n\t./Configure "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ARCH")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D__ANDROID_API__")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$API")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitLqr：只生成 .a 静态库文件")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./Configure $ARCH -D__ANDROID_API__=$API no-shared")]),s._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<< configure '),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ARCH")]),s._v('"')]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" clean\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ARCH=android-arm64")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#API=21")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#build_onearch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ARCH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("android-arm\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("API")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("\nbuild_onearch\n")])])]),e("blockquote",[e("p",[s._v("注意：Windows 系统下，文件路径是带有盘符的，例如："),e("strong",[e("em",[e("code",[s._v("C:/xxx")])])]),s._v("，而 "),e("strong",[e("em",[e("code",[s._v("PATH")])])]),s._v(" 中多个环境变量路径又刚好使用冒号 "),e("strong",[e("em",[e("code",[s._v(":")])])]),s._v(" 分割，为了避免不必要的麻烦，建议修改为 "),e("strong",[e("em",[e("code",[s._v("/c/xxx")])])]),s._v("。")])]),s._v(" "),e("p",[s._v("脚本内容不难理解，就是进入到 openssl 源码目录，执行 "),e("code",[s._v("Configure")]),s._v(" 进行一些参数配置，然后执行 "),e("code",[s._v("make")]),s._v(" 编译而已，请根据自己的情况，修改脚本中的变量值（例如："),e("code",[s._v("NDK_PLATFORM")]),s._v("、"),e("code",[s._v("ANDROID_NDK_HOME")]),s._v("）。脚本中 "),e("code",[s._v("ARCH")]),s._v(" 变量的值，需要根据当前项目情况编写，具体有哪些值，可以通过执行 "),e("code",[s._v("./Configure")]),s._v(" 查看，例如 Android 平台支持的架构有：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("android-arm android-arm64 android-armeabi android-mips android-mips64\nandroid-x86 android-x86_64 android64 android64-aarch64 android64-mips64\nandroid64-x86_64\n")])])]),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252257107.jpg",alt:""}})]),s._v(" "),e("p",[s._v("之后，运行 "),e("code",[s._v("build_openssl.sh")]),s._v("，等待编译完成之后（每编译一个架构大约需要 10 分钟），就可以在 "),e("code",[s._v("openssl-1.1.1w")]),s._v(" 目录下找到编译产物了：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("libssl.so")]),s._v(" / "),e("code",[s._v("libssl.a")])]),s._v(" "),e("li",[e("code",[s._v("libcrypto.so")]),s._v(" / "),e("code",[s._v("libcrypto.a")])])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310260041518.jpg",alt:""}})]),s._v(" "),e("h2",{attrs:{id:"三、踩坑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、踩坑"}},[s._v("#")]),s._v(" 三、踩坑")]),s._v(" "),e("p",[s._v("因为本人使用的是 Windows 系统，不像 Mac 或 Linux 那样，天然自带各种 shell 命令，所以在执行 "),e("code",[s._v("build_openssl.sh")]),s._v(" 文件时遇到了一些阻碍，这里将踩过的坑记录一下。想要在 Windows 下执行 "),e("code",[s._v(".sh")]),s._v(" 文件，需要用到 "),e("code",[s._v("MinGW")]),s._v(" 环境，因为有安装过 Git，所以可以在 "),e("code",[s._v("Git Bash")]),s._v(" 中执行，直接在文件管理器中右键菜单中，点击 "),e("code",[s._v("Open Git Bash here")]),s._v(" 即可打开 "),e("code",[s._v("Git Bash")]),s._v(" 容器，并自动 cd 到了当前目录：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252308790.jpg",alt:""}})]),s._v(" "),e("blockquote",[e("p",[s._v("注：如果右键菜单中没有 "),e("code",[s._v("Open Git Bash here")]),s._v(" 选项，可以去开始菜单搜索 "),e("code",[s._v("Git Bash")]),s._v(" 运行，然后手动 cd 到 "),e("code",[s._v(".sh")]),s._v(" 文件所在目录。")])]),s._v(" "),e("h3",{attrs:{id:"_1、make-错误-make-command-not-found"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、make-错误-make-command-not-found"}},[s._v("#")]),s._v(" 1、make 错误："),e("code",[s._v("make: command not found")])]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("Git Bash")]),s._v(" 窗口中执行 "),e("code",[s._v("./build_openssl.sh")]),s._v("，报错：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("./build_openssl.sh: line "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(": make: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" not found\n")])])]),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252349272.jpg",alt:""}})]),s._v(" "),e("p",[s._v("这是因为 "),e("code",[s._v("Git Bash")]),s._v(" 默认的 "),e("code",[s._v("mingw64")]),s._v(" 环境中没有 "),e("code",[s._v("make")]),s._v(" 工具，可以到如下地址，下载 "),e("code",[s._v("make-4.4.1-without-guile-w32-bin.zip")]),s._v(" 文件。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("make-4.4.1-without-guile-w32-bin.zip")]),s._v("："),e("a",{attrs:{href:"https://sourceforge.net/projects/ezwinports/files/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://sourceforge.net/projects/ezwinports/files/"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("将 "),e("code",[s._v("make-4.4.1-without-guile-w32-bin.zip")]),s._v(" 压缩包中的所有文件拷贝到 "),e("code",[s._v("\\Git\\mingw64")]),s._v(" 目录下，合并文件夹即可：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252352672.jpg",alt:""}})]),s._v(" "),e("h3",{attrs:{id:"_2、perl-错误-usr-bin-env-perl-does-work-as-command-but-not-in-perl-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、perl-错误-usr-bin-env-perl-does-work-as-command-but-not-in-perl-script"}},[s._v("#")]),s._v(" 2、perl 错误："),e("code",[s._v("/usr/bin/env perl does work as command but not in perl script")])]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("Git Bash")]),s._v(" 窗口中执行 "),e("code",[s._v("./build_openssl.sh")]),s._v("，报错：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("/usr/bin/env perl does work as "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" but not "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" perl script\n")])])]),e("ul",[e("li",[s._v("stackoverflow 上关于该问题的讨论："),e("a",{attrs:{href:"https://stackoverflow.com/questions/34791031/usr-bin-env-perl-does-work-as-command-but-not-in-perl-script",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://stackoverflow.com/questions/34791031/usr-bin-env-perl-does-work-as-command-but-not-in-perl-script"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("其实 "),e("code",[s._v("Git Bash")]),s._v(" 是支持 "),e("code",[s._v("perl")]),s._v(" 的，但是个别版本的 "),e("code",[s._v("Git Bash")]),s._v(" 可能不支持 "),e("code",[s._v("#!/usr/bin/env perl")]),s._v(" 命令，可以改用 "),e("code",[s._v("#!/usr/bin/perl")]),s._v(" 来使用 "),e("code",[s._v("perl")]),s._v("。在 "),e("code",[s._v("openssl-1.1.1w")]),s._v(" 目录找到 "),e("code",[s._v("Configure")]),s._v(" 文件，将第一行的 "),e("code",[s._v("#!/usr/bin/env perl")]),s._v(" 删除，改为：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/perl")]),s._v("\n")])])]),e("h3",{attrs:{id:"_3、perl-错误-can-t-locate-pod-usage-pm-in-inc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、perl-错误-can-t-locate-pod-usage-pm-in-inc"}},[s._v("#")]),s._v(" 3、perl 错误："),e("code",[s._v("Can't locate Pod/Usage.pm in @INC")])]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("Git Bash")]),s._v(" 窗口中执行 "),e("code",[s._v("./build_openssl.sh")]),s._v("，报错：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("Can't "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("locate")]),s._v(" Pod/Usage.pm "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" @INC "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("you may need to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" the Pod::Usage module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("@INC contains: "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /usr/lib/perl5/site_perl /usr/share/perl5/site_perl /usr/lib/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib/perl5/core_perl /usr/share/perl5/core_perl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" at configdata.pm line "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15251")]),s._v(".\nBEGIN failed--compilation aborted at configdata.pm line "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15251")]),s._v(".\nCompilation failed "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" require.\nBEGIN failed--compilation aborted.\n")])])]),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252325705.jpg",alt:""}})]),s._v(" "),e("p",[s._v("这是因为 "),e("code",[s._v("Git Bash")]),s._v(" 默认自带的 "),e("code",[s._v("perl")]),s._v(" 工具被精简过，缺少了一些文件，比如这里就找不到 "),e("code",[s._v("Pod/Usage.pm")]),s._v("，所以解决该问题也简单，补全这些缺少的文件即可，到 "),e("code",[s._v("strawberryperl")]),s._v(" 官网下载 "),e("code",[s._v("strawberry-perl-xx.zip")]),s._v(" 文件：")]),s._v(" "),e("ul",[e("li",[s._v("strawberryperl 官网："),e("a",{attrs:{href:"https://strawberryperl.com/releases.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://strawberryperl.com/releases.html"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("code",[s._v("strawberry-perl-5.32.1.1-64bit.zip")]),s._v("："),e("a",{attrs:{href:"https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-64bit.zip",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-64bit.zip"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("然后打开 "),e("code",[s._v("strawberry-perl-xx.zip")]),s._v(" 压缩包，找到 "),e("code",[s._v("\\perl\\lib\\")]),s._v(" 目录下的 "),e("code",[s._v("Pod")]),s._v(" 文件夹，将其拷贝到本机的 "),e("code",[s._v("\\Git\\usr\\lib\\perl5\\vendor_perl")]),s._v(" 目录下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202310252338690.jpg",alt:""}})]),s._v(" "),e("blockquote",[e("p",[s._v("注：如果本地已经有 Pod 目录，那么合并即可。")])]),s._v(" "),e("p",[s._v("经过上述几个填坑步骤之后，在 "),e("code",[s._v("Git Bash")]),s._v(" 窗口中就可以顺利执行完 "),e("code",[s._v("build_openssl.sh")]),s._v(" 了。😩😩😩")])])}),[],!1,null,null,null);e.default=r.exports}}]);