(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{567:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),s("p",[t._v("在上一篇【"),s("RouterLink",{attrs:{to:"/pages/9ba5a4/"}},[t._v("Flutter - GetX Helper 助你规范应用 tag")]),t._v("】中，跟大家介绍了 "),s("a",{attrs:{href:"https://github.com/LinXunFeng/getx_helper",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/LinXunFeng/getx_helper"),s("OutboundLink")],1),t._v(" ，针对新页面的推荐使用姿势，即 "),s("code",[t._v("Mixin")]),t._v(" 的方式，但是对于已有的旧页面，可能有着大量的业务代码，我们没办法直接重构它，但是又不想再持续忍受到处写相同的 "),s("code",[t._v("tag")]),t._v(" 或者直接传 "),s("code",[t._v("logic")]),t._v(" 实例的方式。")],1),t._v(" "),s("p",[t._v("那有没有办法将 "),s("code",[t._v("getx_helper")]),t._v(" 应用到旧页面呢？答案是有的！")]),t._v(" "),s("p",[s("code",[t._v("getx_helper")]),t._v(" 提供了三种方式，"),s("code",[t._v("Mixin")]),t._v("、嵌套子 "),s("code",[t._v("Widget")]),t._v(" 和 通过 "),s("code",[t._v("BuildContext")]),t._v(" 去获取，并且这三种方式是可以混合使用的！")]),t._v(" "),s("p",[t._v("接下来讲讲如何应用吧。")]),t._v(" "),s("h2",{attrs:{id:"二、页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、页面"}},[t._v("#")]),t._v(" 二、页面")]),t._v(" "),s("p",[t._v("这里假设已存在的旧页面的结构代码如下")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _HomePageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" logicTag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lxf'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  late "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),t._v(" logic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logicTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" resultWidget "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scaffold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      appBar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppBar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Center")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatelessWidget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" resultWidget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("你只需要在页面的根嵌套一层 "),s("code",[t._v("GetxLogicProvider")]),t._v(" 即可向下共享 "),s("code",[t._v("logicTag")]),t._v(" ～")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _HomePageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" resultWidget "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scaffold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ====== 嵌套一层 GetxLogicProvider ======")]),t._v("\n    resultWidget "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetxLogicProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只是关联类型，不会创建新的 logic")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      logicTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logicTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" resultWidget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// =======================================")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" resultWidget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注：这里建议使用插件提供的代码片段 "),s("code",[t._v("GH_GetxLogicProvider.put")]),t._v(" 去快速生成相关代码，避免遗漏重要参数。")]),t._v(" "),s("h2",{attrs:{id:"三、子部件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、子部件"}},[t._v("#")]),t._v(" 三、子部件")]),t._v(" "),s("p",[t._v("子部件可通过以下三种方式，去获取 "),s("code",[t._v("GetxLogicProvider")]),t._v(" 共享的 "),s("code",[t._v("logicTag")]),t._v("，并进而拿到 "),s("code",[t._v("logic")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"方式一-mixin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一-mixin"}},[t._v("#")]),t._v(" 方式一: "),s("code",[t._v("Mixin")])]),t._v(" "),s("p",[t._v("基于支持混合使用这一点，推荐大家对于新增的子部件，还是使用上一篇中介绍的通过插件去创建 "),s("code",[t._v("Widgte")]),t._v(" 的 "),s("code",[t._v("Mixin")]),t._v(" 方式，即右击 "),s("code",[t._v("widget")]),t._v(" 目录，选择 "),s("code",[t._v("GetX: Mixin Widget")]),t._v(" 去生成 "),s("code",[t._v("Widget")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"方式二-嵌套子-widget"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二-嵌套子-widget"}},[t._v("#")]),t._v(" 方式二: 嵌套子 "),s("code",[t._v("Widget")])]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("StatelessWidget")]),t._v("，你可以通过嵌套一层 "),s("code",[t._v("GetxLogicConsumer.get")]),t._v(" 去拿到 "),s("code",[t._v("logic")]),t._v(" 和 "),s("code",[t._v("logicTag")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatelessWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatelessWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatelessWidget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetxLogicConsumer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只是关联类型，不会创建新的 logic")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logicTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lxf -- logic: Instance of 'HomeLogic' -- logicTag: lxf")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lxf -- logic: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("logic")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" -- logicTag: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("logicTag")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Placeholder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// onInitState: (context, logic, logicTag) {},")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// onDispose: (context, logic, logicTag) {},")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注：这里建议使用插件提供的代码片段 "),s("code",[t._v("GH_GetxLogicConsumer.get")]),t._v(" 去快速生成相关代码，避免遗漏重要参数。")]),t._v(" "),s("p",[t._v("当然了，这里还是建议将旧的 "),s("code",[t._v("StatelessWidget")]),t._v(" 重构成使用 "),s("code",[t._v("Mixin")]),t._v(" 的方式～")]),t._v(" "),s("h3",{attrs:{id:"方式三-通过-buildcontext-获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式三-通过-buildcontext-获取"}},[t._v("#")]),t._v(" 方式三: 通过 "),s("code",[t._v("BuildContext")]),t._v(" 获取")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("BuildContext")]),t._v(" 去获取")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 logic")]),t._v("\ncontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getxLogic"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 logicTag")]),t._v("\ncontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getxTag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果你是在 "),s("code",[t._v("StatefulWidget")]),t._v(" 的 "),s("code",[t._v("State")]),t._v(" 中使用，则可以省略前面的 "),s("code",[t._v("context")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 logic")]),t._v("\ngetxLogic"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 logicTag")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getxTag")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("方式三看起来挺简单好用的，但是，它所使用的 "),s("code",[t._v("BuildContext")]),t._v(" 的生命周期必须是 "),s("code",[t._v(".active")]),t._v("，具体是什么意思？这里给出一张图就明白了")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/FullStackAction/PicBed@resource20230813121546/image/202506141501314.jpeg",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("图片取自 "),s("a",{attrs:{href:"https://blog.csdn.net/lcl130/article/details/115129796",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/lcl130/article/details/115129796"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("如上图所示，你只能在 "),s("code",[t._v("initState")]),t._v("、"),s("code",[t._v("didChangeDependencies")]),t._v(" 和 "),s("code",[t._v("build")]),t._v(" 方法中去使用，如果你能保证一定会遵守这个使用规则，那没问题。")]),t._v(" "),s("h2",{attrs:{id:"四、其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、其它"}},[t._v("#")]),t._v(" 四、其它")]),t._v(" "),s("h3",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),s("p",[t._v("就是基于 "),s("code",[t._v("InheritedWidget")]),t._v(" 自上而下去共享了 "),s("code",[t._v("logicTag")]),t._v(" 而已，没什么特别的。")]),t._v(" "),s("p",[t._v("基于该实现原理，我们可以不一定要以页面为维度去使用，也可以用于复用的视图模块。")]),t._v(" "),s("p",[t._v("只不过需要注意一点，如果不是以页面为维度，或者不是使用 "),s("code",[t._v("GetX")]),t._v(" 的路由，则 "),s("code",[t._v("logic")]),t._v(" 并不会被自动回收，这个时候只需要对视图的根 "),s("code",[t._v("GetBuilder")]),t._v(" 的 "),s("code",[t._v("assignId")]),t._v(" 设置为 "),s("code",[t._v("true")]),t._v(" 即可。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记得设置 Logic 类型和 tag")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetBuilder")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" logicTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  assignId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"三种方式的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种方式的关系"}},[t._v("#")]),t._v(" 三种方式的关系")]),t._v(" "),s("p",[t._v("前两种方式都是基于方式三去实现的，只是使用了 "),s("code",[t._v("StatefulWidget")]),t._v(" 进行了包裹，并且在 "),s("code",[t._v("initState")]),t._v(" 中提前将 "),s("code",[t._v("logic")]),t._v(" 和 "),s("code",[t._v("logicTag")]),t._v(" 取出并记录了起来，从而避免了 "),s("code",[t._v("BuildContext")]),t._v(" 的使用限制。")]),t._v(" "),s("p",[t._v("虽然 "),s("code",[t._v("Flutter")]),t._v(" 的精髓在于嵌套，但是我们可以通过 "),s("code",[t._v("Mixin")]),t._v(" 的方式去优化嵌套～")]),t._v(" "),s("h3",{attrs:{id:"logic-构建方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logic-构建方法"}},[t._v("#")]),t._v(" "),s("code",[t._v("Logic")]),t._v(" 构建方法")]),t._v(" "),s("p",[t._v("一般情况下，在使用了 "),s("code",[t._v("getx_helper")]),t._v(" 这一套规范之后，我们是不会去修改 "),s("code",[t._v("Logic")]),t._v(" 的默认构造方法的，所以上述我们使用 "),s("code",[t._v("HomeLogic.new")]),t._v(" 没有任何问题。")]),t._v(" "),s("p",[t._v("但是旧页面可能会在默认构造方法中去接收一些参数，这个时候 "),s("code",[t._v("HomeLogic.new")]),t._v(" 就会报错，那怎么解决呢？")]),t._v(" "),s("p",[t._v("上面的注释中也说了，"),s("code",[t._v("HomeLogic.new")]),t._v(" 只是关联 "),s("code",[t._v("HomeLogic")]),t._v(" 这个类型而已，所以我们可以写一个专门用来关联 "),s("code",[t._v("Logic")]),t._v(" 类型的命名构造方法来解决。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GetxController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" region"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("required "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("region"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeLogic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("region "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后将所有的 "),s("code",[t._v("HomeLogic.new")]),t._v(" 改为 "),s("code",[t._v("HomeLogic.type")]),t._v(" 即可。")]),t._v(" "),s("h2",{attrs:{id:"五、最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、最后"}},[t._v("#")]),t._v(" 五、最后")]),t._v(" "),s("p",[t._v("以上就是 "),s("code",[t._v("getx_helper")]),t._v(" 在旧页面应用的使用说明，不得不说，"),s("code",[t._v("Mixin")]),t._v(" 的方式比其它方式安全、方便和优雅太多了，所以极力建议大家，能用 "),s("code",[t._v("Mixin")]),t._v(" 的方式就用 "),s("code",[t._v("Mixin")]),t._v(" 的方式～")]),t._v(" "),s("p",[t._v("开源不易，如果你也觉得这个库好用 ("),s("a",{attrs:{href:"https://github.com/LinXunFeng/getx_helper",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/LinXunFeng/getx_helper"),s("OutboundLink")],1),t._v(")，请不吝给个 "),s("code",[t._v("Star")]),t._v(" 👍 ，并多多支持！")])])}),[],!1,null,null,null);s.default=e.exports}}]);